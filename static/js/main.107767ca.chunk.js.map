{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","type","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","res","json","result","console","log","main","name","sys","country","d","day","getDay","month","getMonth","year","getFullYear","date","getDate","dateBuilder","Date","Math","round","temp","rel","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAEMA,EAEC,mCAFDA,EAGE,2CA6EOC,MA1Ef,WACC,IAAD,EAC2BC,mBAAS,IADpC,mBACQC,EADR,KACeC,EADf,OAE+BF,mBAAS,IAFxC,mBAEQG,EAFR,KAEiBC,EAFjB,KA8BE,OACE,qBAAKC,UAAU,MAAf,SACI,iCACM,qBAAKA,UAAU,aAAf,SACM,uBACIC,KAAK,OACLD,UAAU,aACVE,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIP,EAASO,EAAEC,OAAOC,QACjCA,MAAOV,EACPW,WApCP,SAAAC,GAEI,UAAdA,EAAMC,KAEPC,MAAM,GAAD,OAAIjB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJf,EAAWe,GACXjB,EAAS,IACTkB,QAAQC,IAAIF,WA6BmB,oBAAhBhB,EAAQmB,KACb,8BACM,sBAAKjB,UAAU,eAAf,UACI,sBAAKA,UAAU,WAAf,UACOF,EAAQoB,KADf,KACuBpB,EAAQqB,IAAIC,WAEnC,sBAAKpB,UAAU,OAAf,cA9BN,SAACqB,GAEnB,IAEIC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DD,EAAEE,UACbC,EAHS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAGzGH,EAAEI,YACjBC,EAAOL,EAAEM,cACTC,EAAOP,EAAEQ,UACb,MAAM,GAAN,OAAUP,EAAV,YAAiBM,EAAjB,YAAyBJ,EAAzB,YAAkCE,GAsBcI,CAAY,IAAIC,SACxC,sBAAK/B,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,UACKgC,KAAKC,MAAMnC,EAAQmB,KAAKiB,MAD7B,WAGA,qBAAKlC,UAAU,UAAf,SACGF,EAAQA,QAAQ,GAAGmB,eAKnC,GACL,sBAAKjB,UAAU,SAAf,UACA,mBAAIK,OAAO,SAAS8B,IAAI,sBAAsBC,KAAK,6BAAnD,SAAgF,mBAAGpC,UAAU,oBAC7F,0DC5DCqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.107767ca.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\nconst api = \n{\n  key: \"f8aba5735fc5204fde995c0bb04e6f84\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\n\nfunction App() \n{\n  const[query, setQuery] = useState('');\n  const[weather, setWeather] = useState({});\n\n  const search = event =>\n  {\n    if(event.key === \"Enter\")\n    {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result => \n        {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n        });\n    }\n  }\n\n  const dateBuilder = (d) => \n  {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    let date = d.getDate();\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className=\"app\">\n        <main>\n              <div className=\"search-box\">\n                    <input \n                        type=\"text\"\n                        className=\"search-bar\"\n                        placeholder=\"Search...\"\n                        onChange={e => setQuery(e.target.value)}\n                        value={query}\n                        onKeyPress={search}\n                    />\n              </div>\n              {(typeof weather.main != \"undefined\") ? (\n                  <div>\n                        <div className=\"location-box\">\n                            <div className=\"location\"> \n                                  {weather.name}, {weather.sys.country} \n                            </div>\n                            <div className=\"date\"> {dateBuilder(new Date())}</div>\n                            <div className=\"weather-box\"> \n                                <div className=\"temperature\"> \n                                    {Math.round(weather.main.temp)}Â°C\n                                </div>  \n                                <div className=\"weather\"> \n                                  {weather.weather[0].main}\n                                </div>   \n                            </div>    \n                        </div>\n                  </div>\n              ) : ('')}\n              <div className=\"footer\">\n              <a  target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/YunaAnn\"><i className=\"fab fa-github\"></i></a>\n              <h2>WeatherAppReact</h2>\n              </div>\n\n\n\n        </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}